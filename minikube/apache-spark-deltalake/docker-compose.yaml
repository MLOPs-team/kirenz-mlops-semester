version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
      - POSTGRES_DB=police-data
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
       - postgres:/data/postgres
       - ./SQL/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    ports:
      - "5432:5432"
    networks:
      - deltalake
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  spark:
    container_name: spark
    image: docker.io/bitnami/spark:3.1.1
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - deltalake
    depends_on:
      - postgres
  spark-worker:
    build:
      context: ./spark-worker
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - deltalake
    depends_on:
      - spark 
  spark-submit:
      build:  
        context: ./spark-submit
      container_name: spark-submit
      environment:
          - ENABLE_INIT_DAEMON=false
          - PYSPARK_PYTHON=python3 
      image: spark-app
      depends_on:
        - spark-worker   
      networks:
        - deltalake   
networks:
    deltalake: 
      driver: bridge  
volumes:
    postgres:
    